# –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
with open('bot/handlers/utm_admin.py', 'r', encoding='utf-8') as f:
    content = f.read()

# –ù–∞–π–¥–µ–º —Ñ—É–Ω–∫—Ü–∏—é view_campaign
view_start = content.find('@router.callback_query(F.data.startswith("utm_view_campaign_"))')
view_end = content.find('@router.callback_query', view_start + 1)
if view_end == -1:
    view_end = content.find('\n\n# =================== –£–ü–†–ê–í–õ–ï–ù–ò–ï –ö–ê–ú–ü–ê–ù–ò–ï–ô ===================', view_start)

# –ù–æ–≤–∞—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è view_campaign
new_view_campaign = '''@router.callback_query(F.data.startswith("utm_view_campaign_"))
@admin_required
async def view_campaign(callback: CallbackQuery, state: FSMContext):
    """–ü—Ä–æ—Å–º–æ—Ç—Ä –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–∞–º–ø–∞–Ω–∏–∏"""
    await state.clear()
    
    campaign_id = int(callback.data.split("_")[-1])
    
    try:
        analytics = await utm_service.get_campaign_analytics(campaign_id)
        
        if not analytics:
            await callback.answer("‚ùå –ö–∞–º–ø–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞", show_alert=True)
            return
        
        campaign = analytics['campaign']
        clicks = analytics['clicks']
        events = analytics['events']
        conversions = analytics['conversions']
        revenue = analytics['revenue']
        timeline = analytics['timeline']
        
        status_emoji = "üü¢" if campaign['is_active'] else "üî¥"
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏
        avg_convert_time = ""
        if events.get('registration', {}).get('avg_time_to_convert_minutes', 0) > 0:
            minutes = events['registration']['avg_time_to_convert_minutes']
            hours = events['registration']['avg_time_to_convert_hours']
            if hours >= 1:
                avg_convert_time = f"‚è±Ô∏è –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –¥–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {hours:.1f}—á\\n"
            else:
                avg_convert_time = f"‚è±Ô∏è –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –¥–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {minutes:.1f}–º–∏–Ω\\n"
        
        text = f"""
üìä <b>–î–µ—Ç–∞–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –∫–∞–º–ø–∞–Ω–∏–∏</b>

{status_emoji} <b>{campaign['name']}</b>

üè∑Ô∏è <b>UTM –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:</b>
‚Ä¢ –ò—Å—Ç–æ—á–Ω–∏–∫: <code>{campaign['utm_source']}</code>
‚Ä¢ –¢–∏–ø: <code>{campaign['utm_medium']}</code>
‚Ä¢ –ö–∞–º–ø–∞–Ω–∏—è: <code>{campaign['utm_campaign']}</code>
‚Ä¢ –ö–æ–Ω—Ç–µ–Ω—Ç: <code>{campaign['utm_content'] or '–Ω–µ —É–∫–∞–∑–∞–Ω'}</code>

üìà <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç—Ä–∞—Ñ–∏–∫–∞:</b>
‚Ä¢ üë• –í—Å–µ–≥–æ –∫–ª–∏–∫–æ–≤: <b>{clicks['total_clicks']}</b>
‚Ä¢ üÜî –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: <b>{clicks['unique_users']}</b>
‚Ä¢ üÜï –ü–µ—Ä–≤—ã–µ –ø–æ—Å–µ—â–µ–Ω–∏—è: <b>{clicks['first_visits']}</b>
‚Ä¢ üì± –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö: <b>{clicks['registered_users_clicks']}</b>
‚Ä¢ ‚ú® –ù–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: <b>{clicks['new_users_clicks']}</b>
‚Ä¢ üîÑ –í–æ–∑–≤—Ä–∞—Ç–æ–≤: <b>{clicks['total_clicks'] - clicks['first_visits']}</b> ({clicks['return_visitor_rate']}%)

üéØ <b>–°–æ–±—ã—Ç–∏—è –∏ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏:</b>"""
        
        for event_type, event_data in events.items():
            event_emoji = {
                'registration': 'üìù',
                'purchase': 'üí∞',
                'generation': 'üé¨'
            }.get(event_type, 'üìä')
            
            event_name = {
                'registration': '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏',
                'purchase': '–ü–æ–∫—É–ø–∫–∏', 
                'generation': '–ì–µ–Ω–µ—Ä–∞—Ü–∏–∏'
            }.get(event_type, event_type.title())
            
            text += f"\\n‚Ä¢ {event_emoji} {event_name}: <b>{event_data['count']}</b>"
            if event_data['total_revenue'] > 0:
                text += f" (üí∞ {event_data['total_revenue']:.2f}‚ÇΩ)"
            
            if event_data.get('avg_time_to_convert_minutes', 0) > 0:
                if event_data['avg_time_to_convert_hours'] >= 1:
                    text += f" ‚è±Ô∏è {event_data['avg_time_to_convert_hours']:.1f}—á"
                else:
                    text += f" ‚è±Ô∏è {event_data['avg_time_to_convert_minutes']:.0f}–º–∏–Ω"
        
        text += f"""

üìä <b>–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –∫–æ–Ω–≤–µ—Ä—Å–∏–∏:</b>
‚Ä¢ –ö–ª–∏–∫–∏ ‚Üí –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: <b>{conversions['click_to_registration']}%</b>
‚Ä¢ –ö–ª–∏–∫–∏ ‚Üí –ü–æ–∫—É–ø–∫–∏: <b>{conversions['click_to_purchase']}%</b>
‚Ä¢ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ ‚Üí –ü–æ–∫—É–ø–∫–∏: <b>{conversions['registration_to_purchase']}%</b>
‚Ä¢ –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ ‚Üí –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: <b>{conversions['unique_to_registration']}%</b>

üí∞ <b>–ú–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏—è:</b>
‚Ä¢ –û–±—â–∞—è –≤—ã—Ä—É—á–∫–∞: <b>{revenue['total']:.2f}‚ÇΩ</b>
‚Ä¢ –í—ã—Ä—É—á–∫–∞ —Å –∫–ª–∏–∫–∞: <b>{revenue['per_click']:.2f}‚ÇΩ</b>
‚Ä¢ –í—ã—Ä—É—á–∫–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: <b>{revenue['per_user']:.2f}‚ÇΩ</b>"""

        if revenue['per_registration'] > 0:
            text += f"\\n‚Ä¢ ARPU: <b>{revenue['per_registration']:.2f}‚ÇΩ</b>"

        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–ø —á–∞—Å—ã –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –µ—Å–ª–∏ –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ
        if timeline['top_hours']:
            text += f"\\n\\nüïê <b>–¢–æ–ø —á–∞—Å—ã –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏:</b>\\n"
            for i, hour_data in enumerate(timeline['top_hours'][:3], 1):
                text += f"{i}. {hour_data['hour']} - {hour_data['clicks']} –∫–ª–∏–∫–æ–≤\\n"

        text += f"""

üìÖ <b>–°–æ–∑–¥–∞–Ω–∞:</b> {datetime.fromisoformat(campaign['created_at']).strftime('%d.%m.%Y %H:%M')}
üîó <b>–ö–æ–¥:</b> <code>{campaign['short_code']}</code>
"""
        
        builder = InlineKeyboardBuilder()
        
        # –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
        toggle_text = "üî¥ –î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å" if campaign['is_active'] else "üü¢ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å"
        builder.button(text=toggle_text, callback_data=f"utm_toggle_{campaign_id}")
        
        builder.button(text="üìä –ü–æ–¥—Ä–æ–±–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞", callback_data=f"utm_detailed_{campaign_id}")
        builder.button(text="üì• –≠–∫—Å–ø–æ—Ä—Ç (–¥–µ—Ç–∞–ª—å–Ω—ã–π)", callback_data=f"utm_export_{campaign_id}")
        builder.button(text="üìã –≠–∫—Å–ø–æ—Ä—Ç (—Å–≤–æ–¥–∫–∞)", callback_data=f"utm_export_summary_{campaign_id}")
        builder.button(text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –∫–∞–º–ø–∞–Ω–∏—é", callback_data=f"utm_delete_{campaign_id}")
        builder.button(text="üìã –°–ø–∏—Å–æ–∫ –∫–∞–º–ø–∞–Ω–∏–π", callback_data="utm_list_campaigns")
        builder.button(text="‚óÄÔ∏è –ú–µ–Ω—é UTM", callback_data="utm_analytics")
        builder.adjust(2, 2, 1, 1, 1)
        
        await callback.message.edit_text(text, reply_markup=builder.as_markup(), parse_mode="HTML")
        await callback.answer()
        
    except Exception as e:
        logger.error(f"Error viewing UTM campaign {campaign_id}: {e}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏", show_alert=True)

'''

# –ó–∞–º–µ–Ω—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é
if view_end != -1:
    content = content[:view_start] + new_view_campaign + content[view_end:]

# –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
with open('bot/handlers/utm_admin.py', 'w', encoding='utf-8') as f:
    f.write(content)

print("–û–±–Ω–æ–≤–ª–µ–Ω –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–∞–º–ø–∞–Ω–∏–∏ —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–π")
