#!/bin/bash

# –°–∫—Ä–∏–ø—Ç —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è Seedance Bot –Ω–∞ VPS
# –ê–≤—Ç–æ—Ä: Seedance Team
# –í–µ—Ä—Å–∏—è: 1.0

set -e

echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ Seedance Bot –Ω–∞ VPS..."

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Ü–≤–µ—Ç–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Docker
if ! command -v docker &> /dev/null; then
    print_error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker –∏ Docker Compose."
    exit 1
fi

if ! command -v docker-compose &> /dev/null && ! docker compose version &> /dev/null; then
    print_error "Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è .env —Ñ–∞–π–ª–∞
if [ ! -f ".env" ]; then
    print_warning "–§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω."
    if [ -f "vps-env-example.txt" ]; then
        print_status "–ö–æ–ø–∏—Ä—É–µ–º –ø—Ä–∏–º–µ—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
        cp vps-env-example.txt .env
        print_warning "–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª .env —Å –≤–∞—à–∏–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –ø–µ—Ä–µ–¥ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ–º."
        print_warning "–û—Å–æ–±–µ–Ω–Ω–æ –≤–∞–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å:"
        echo "  - BOT_TOKEN"
        echo "  - WEBHOOK_HOST"
        echo "  - DB_PASSWORD"
        echo "  - REDIS_PASSWORD"
        echo "  - SECRET_KEY"
        echo "  - ADMIN_IDS"
        read -p "–ù–∞–∂–º–∏—Ç–µ Enter –ø–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ .env —Ñ–∞–π–ª–∞..."
    else
        print_error "–§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–π—Ç–µ .env —Ñ–∞–π–ª."
        exit 1
    fi
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
print_status "–°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏..."
mkdir -p logs static/images static/videos backups

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ nginx
print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ nginx..."
if systemctl is-active --quiet nginx; then
    print_success "Nginx –∑–∞–ø—É—â–µ–Ω"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è –±–æ—Ç–∞
    if [ ! -f "/etc/nginx/sites-available/seedance-bot" ]; then
        print_warning "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è nginx –¥–ª—è –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞."
        print_status "–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å SSL –æ—Ç Beget - –æ—Ç–ª–∏—á–Ω–æ!"
        print_status "–í—ã–ø–æ–ª–Ω–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫—É nginx:"
        echo "  1. sudo cp nginx-site.conf /etc/nginx/sites-available/seedance-bot"
        echo "  2. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª –∏ —É–∫–∞–∂–∏—Ç–µ –≤–∞—à–∏ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã"
        echo "  3. sudo ln -s /etc/nginx/sites-available/seedance-bot /etc/nginx/sites-enabled/"
        echo "  4. sudo nginx -t && sudo systemctl reload nginx"
        echo ""
        print_status "–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –≤ —Ñ–∞–π–ª–µ BEGET_SSL_SETUP.md"
        read -p "–ù–∞–∂–º–∏—Ç–µ Enter –ø–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ nginx..."
    else
        print_success "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è nginx –Ω–∞–π–¥–µ–Ω–∞"
    fi
else
    print_error "Nginx –Ω–µ –∑–∞–ø—É—â–µ–Ω –∏–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."
    print_status "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ nginx:"
    echo "  sudo apt install nginx"
    echo "  sudo systemctl start nginx"
    echo "  sudo systemctl enable nginx"
    exit 1
fi

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
print_status "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker-compose -f docker-compose.vps.yml down 2>/dev/null || true

# –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤
print_status "–°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤..."
docker-compose -f docker-compose.vps.yml build --no-cache

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
print_status "–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
docker-compose -f docker-compose.vps.yml up -d

# –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞
print_status "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 30

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
if docker-compose -f docker-compose.vps.yml ps | grep -q "Up"; then
    print_success "–°–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!"
else
    print_error "–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤."
    docker-compose -f docker-compose.vps.yml logs
    exit 1
fi

# –ú–∏–≥—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
print_status "–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
docker-compose -f docker-compose.vps.yml exec bot python migrations/apply_migrations.py

# –ü—Ä–æ–≤–µ—Ä–∫–∞ webhook'–∞
print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ webhook'–∞..."
WEBHOOK_URL=$(grep WEBHOOK_HOST .env | cut -d '=' -f2)
if [ ! -z "$WEBHOOK_URL" ]; then
    echo "Webhook URL: ${WEBHOOK_URL}/webhook"
    print_warning "–ù–µ –∑–∞–±—É–¥—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å webhook –≤ BotFather!"
    print_warning "–ö–æ–º–∞–Ω–¥–∞: /setwebhook"
    print_warning "URL: ${WEBHOOK_URL}/webhook"
fi

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥—Ä–æ—Çate
print_status "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–æ—Ç–∞—Ü–∏–∏ –ª–æ–≥–æ–≤..."
sudo tee /etc/logrotate.d/seedance-bot > /dev/null <<EOF
$(pwd)/logs/*.log {
    daily
    rotate 7
    compress
    delaycompress
    missingok
    notifempty
    create 644 $(whoami) $(whoami)
    postrotate
        docker-compose -f $(pwd)/docker-compose.vps.yml restart bot
    endscript
}
EOF

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞
print_status "–°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞..."
sudo tee /etc/systemd/system/seedance-bot.service > /dev/null <<EOF
[Unit]
Description=Seedance Bot
Requires=docker.service
After=docker.service

[Service]
Type=oneshot
RemainAfterExit=yes
WorkingDirectory=$(pwd)
ExecStart=/usr/bin/docker-compose -f docker-compose.vps.yml up -d
ExecStop=/usr/bin/docker-compose -f docker-compose.vps.yml down
User=$(whoami)
Group=$(whoami)

[Install]
WantedBy=multi-user.target
EOF

sudo systemctl daemon-reload
sudo systemctl enable seedance-bot.service

# –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
print_status "–§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞..."
sleep 10

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
HEALTHY_CONTAINERS=$(docker-compose -f docker-compose.vps.yml ps --services --filter "status=running" | wc -l)
TOTAL_CONTAINERS=$(docker-compose -f docker-compose.vps.yml config --services | wc -l)

if [ "$HEALTHY_CONTAINERS" -eq "$TOTAL_CONTAINERS" ]; then
    print_success "‚úÖ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"
    echo ""
    echo "üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:"
    docker-compose -f docker-compose.vps.yml ps
    echo ""
    echo "üìù –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
    echo "  –õ–æ–≥–∏ –±–æ—Ç–∞:      docker-compose -f docker-compose.vps.yml logs bot"
    echo "  –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫:     docker-compose -f docker-compose.vps.yml restart"
    echo "  –û—Å—Ç–∞–Ω–æ–≤–∫–∞:      docker-compose -f docker-compose.vps.yml down"
    echo "  –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ:     git pull && docker-compose -f docker-compose.vps.yml up -d --build"
    echo ""
    print_warning "üîß –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏ (SSL –æ—Ç Beget —É–∂–µ –µ—Å—Ç—å):"
    echo "  1. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é:"
    echo "     sudo cp nginx-site.conf /etc/nginx/sites-available/seedance-bot"
    echo "     sudo nano /etc/nginx/sites-available/seedance-bot  # —É–∫–∞–∂–∏—Ç–µ –ø—É—Ç–∏ –∫ SSL"
    echo "     sudo ln -s /etc/nginx/sites-available/seedance-bot /etc/nginx/sites-enabled/"
    echo "     sudo nginx -t && sudo systemctl reload nginx"
    echo ""
    echo "  2. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å webhook –≤ BotFather:"
    echo "     /setwebhook -> https://yourdomain.com/webhook"
    echo ""
    echo "  3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–±–æ—Ç—É:"
    echo "     curl https://yourdomain.com/health"
    echo ""
    echo "  üìñ –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è: BEGET_SSL_SETUP.md"
else
    print_error "‚ùå –ù–µ –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—Å—Ç–∏–ª–∏—Å—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ."
    echo "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker-compose -f docker-compose.vps.yml logs"
    exit 1
fi 