# Makefile –¥–ª—è –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–≥–æ –±–æ—Ç–∞ (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)

.PHONY: help build up down restart logs shell-bot shell-db backup clean

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
COMPOSE_FILE = docker-compose.yml
SERVICE_NAME = bot

help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
	@echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–≥–æ –±–æ—Ç–∞:"
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-20s\033[0m %s\n", $$1, $$2}'

# === –û–°–ù–û–í–ù–´–ï –ö–û–ú–ê–ù–î–´ ===

build: ## –°–æ–±—Ä–∞—Ç—å Docker –æ–±—Ä–∞–∑—ã
	docker-compose -f $(COMPOSE_FILE) --env-file .env.client build

up: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –Ω–∞ VPS
	@echo "üöÄ –ó–∞–ø—É—Å–∫ Magic Frame Bot –Ω–∞ VPS..."
	docker-compose -f $(COMPOSE_FILE) --env-file .env.client up -d
	@echo "‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! Webhook: https://chatbotan.ru/magicframe"

up-backup: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º–∏ –±—ç–∫–∞–ø–∞–º–∏
	@echo "üöÄ –ó–∞–ø—É—Å–∫ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º–∏ –±—ç–∫–∞–ø–∞–º–∏..."
	docker-compose -f $(COMPOSE_FILE) --env-file .env.client --profile backup up -d
	@echo "‚úÖ –ë–æ—Ç —Å –±—ç–∫–∞–ø–∞–º–∏ –∑–∞–ø—É—â–µ–Ω!"

up-full: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å Celery Worker
	docker-compose -f $(COMPOSE_FILE) --env-file .env.client --profile full up -d

# === –¢–ï–°–¢–û–í–´–ï –ö–û–ú–ê–ù–î–´ (–ú–ò–ù–ò–ú–ê–õ–¨–ù–´–ï –†–ï–°–£–†–°–´) ===

test-up: ## üß™ –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ (—ç–∫–æ–Ω–æ–º–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤)
	@echo "üß™ –ó–∞–ø—É—Å–∫ Magic Frame Bot –≤ –¢–ï–°–¢–û–í–û–ú —Ä–µ–∂–∏–º–µ..."
	@echo "üìä –†–µ—Å—É—Ä—Å—ã: PostgreSQL=1GB, Redis=128MB, –±–µ–∑ Celery/Backup"
	docker-compose -f docker-compose.test.yml --env-file .env.client up -d
	@echo "‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç –∑–∞–ø—É—â–µ–Ω! Webhook: https://chatbotan.ru/magicframe"
	@echo "üí° –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏: make test-down"

test-down: ## ‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç
	@echo "‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –±–æ—Ç–∞..."
	docker-compose -f docker-compose.test.yml down

test-logs: ## üìã –õ–æ–≥–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –±–æ—Ç–∞
	docker-compose -f docker-compose.test.yml logs -f --tail=100

test-restart: ## üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç
	@echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –±–æ—Ç–∞..."
	docker-compose -f docker-compose.test.yml restart

test-clean: ## üßπ –û—á–∏—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
	@echo "üßπ –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
	docker-compose -f docker-compose.test.yml down -v --remove-orphans
	docker system prune -f

test-status: ## üìä –°—Ç–∞—Ç—É—Å —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "üìä –°—Ç–∞—Ç—É—Å —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤:"
	docker-compose -f docker-compose.test.yml ps

up-foreground: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ foreground —Ä–µ–∂–∏–º–µ
	docker-compose -f $(COMPOSE_FILE) --env-file .env.client up

down: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
	docker-compose -f $(COMPOSE_FILE) --env-file .env.client down

restart: ## –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
	docker-compose -f $(COMPOSE_FILE) --env-file .env.client restart

# === –õ–û–ì–ò ===

logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –ª–æ–≥–∏
	docker-compose -f $(COMPOSE_FILE) --env-file .env.client logs -f

logs-bot: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –±–æ—Ç–∞
	docker-compose -f $(COMPOSE_FILE) --env-file .env.client logs -f $(SERVICE_NAME)

logs-db: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ PostgreSQL
	docker-compose -f $(COMPOSE_FILE) --env-file .env.client logs -f postgres

logs-redis: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ Redis
	docker-compose -f $(COMPOSE_FILE) --env-file .env.client logs -f redis

# === –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–ï –ö –°–ï–†–í–ò–°–ê–ú ===

shell-bot: ## –í–æ–π—Ç–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –±–æ—Ç–∞
	docker-compose -f $(COMPOSE_FILE) --env-file .env.client exec $(SERVICE_NAME) /bin/bash

shell-db: ## –í–æ–π—Ç–∏ –≤ PostgreSQL
	docker-compose -f $(COMPOSE_FILE) --env-file .env.client exec postgres psql -U magic_frame -d magic_frame_bot

shell-redis: ## –í–æ–π—Ç–∏ –≤ Redis CLI
	docker-compose -f $(COMPOSE_FILE) --env-file .env.client exec redis redis-cli -a RagnarLothbrok2021!

# === –ú–ò–ì–†–ê–¶–ò–ò –ò –û–ë–°–õ–£–ñ–ò–í–ê–ù–ò–ï ===

migrate: ## –ü—Ä–∏–º–µ–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏ –ë–î
	docker-compose -f $(COMPOSE_FILE) --env-file .env.client exec $(SERVICE_NAME) python migrations/apply_migrations.py

ps: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
	docker-compose -f $(COMPOSE_FILE) --env-file .env.client ps

health: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ –±–æ—Ç–∞..."
	@curl -f https://chatbotan.ru/magicframe/health || echo "‚ùå Bot –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
	@echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ PostgreSQL..."
	@docker-compose -f $(COMPOSE_FILE) --env-file .env.client exec postgres pg_isready -U magic_frame -d magic_frame_bot || echo "‚ùå PostgreSQL –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
	@echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ Redis..."
	@docker-compose -f $(COMPOSE_FILE) --env-file .env.client exec redis redis-cli -a RagnarLothbrok2021! ping || echo "‚ùå Redis –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"

# === –†–ï–ó–ï–†–í–ù–û–ï –ö–û–ü–ò–†–û–í–ê–ù–ò–ï ===

backup: ## –°–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –ë–î
	@mkdir -p ./backups
	docker-compose -f $(COMPOSE_FILE) --env-file .env.client exec postgres pg_dump -U magic_frame magic_frame_bot | gzip > ./backups/backup_$(shell date +%Y%m%d_%H%M%S).sql.gz
	@echo "–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞ –≤ ./backups/"

restore: ## –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ë–î –∏–∑ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
	@echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏:"
	@ls -la ./backups/*.sql.gz 2>/dev/null || echo "–†–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
	@echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: make restore BACKUP_FILE=./backups/backup_YYYYMMDD_HHMMSS.sql.gz"

restore-file: ## –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–∑ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ (—É–∫–∞–∂–∏—Ç–µ BACKUP_FILE=path)
	@if [ -z "$(BACKUP_FILE)" ]; then echo "–£–∫–∞–∂–∏—Ç–µ BACKUP_FILE=path"; exit 1; fi
	docker-compose -f $(COMPOSE_FILE) --env-file .env.client exec postgres dropdb -U magic_frame magic_frame_bot || true
	docker-compose -f $(COMPOSE_FILE) --env-file .env.client exec postgres createdb -U magic_frame magic_frame_bot
	gunzip -c $(BACKUP_FILE) | docker-compose -f $(COMPOSE_FILE) --env-file .env.client exec -T postgres psql -U magic_frame magic_frame_bot

backup-auto: ## –°–æ–∑–¥–∞—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –±—ç–∫–∞–ø –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å
	@echo "–°–æ–∑–¥–∞–Ω–∏–µ –≤–Ω–µ–ø–ª–∞–Ω–æ–≤–æ–≥–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –±—ç–∫–∞–ø–∞..."
	docker-compose -f $(COMPOSE_FILE) --env-file .env.client exec postgres sh -c 'pg_dump -U magic_frame magic_frame_bot | gzip > /backups/manual_backup_$$(date +%Y%m%d_%H%M%S).sql.gz'
	@echo "‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –±—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω"

backup-cleanup: ## –û—á–∏—Å—Ç–∏—Ç—å —Å—Ç–∞—Ä—ã–µ –±—ç–∫–∞–ø—ã (—Å—Ç–∞—Ä—à–µ 30 –¥–Ω–µ–π)
	@echo "–û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –±—ç–∫–∞–ø–æ–≤..."
	find ./backups -name "*.sql.gz" -mtime +30 -delete 2>/dev/null || true
	@echo "‚úÖ –°—Ç–∞—Ä—ã–µ –±—ç–∫–∞–ø—ã –æ—á–∏—â–µ–Ω—ã"

backup-list: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –±—ç–∫–∞–ø–æ–≤
	@echo "üìÅ –°–ø–∏—Å–æ–∫ –±—ç–∫–∞–ø–æ–≤:"
	@ls -la ./backups/*.sql.gz 2>/dev/null | awk '{print $$9, $$5/1024/1024 "MB", $$6, $$7, $$8}' || echo "–ë—ç–∫–∞–ø—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"

backup-cleanup: ## –£–¥–∞–ª–∏—Ç—å –±—ç–∫–∞–ø—ã —Å—Ç–∞—Ä—à–µ 30 –¥–Ω–µ–π
	@echo "üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –±—ç–∫–∞–ø–æ–≤..."
	@find ./backups -name "*.sql.gz" -mtime +30 -exec rm {} \; 2>/dev/null || true
	@find ./backups -name "*.meta" -mtime +30 -exec rm {} \; 2>/dev/null || true
	@echo "‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"

backup-size: ## –ü–æ–∫–∞–∑–∞—Ç—å –æ–±—â–∏–π —Ä–∞–∑–º–µ—Ä –≤—Å–µ—Ö –±—ç–∫–∞–ø–æ–≤
	@du -sh ./backups/ 2>/dev/null || echo "–ü–∞–ø–∫–∞ —Å –±—ç–∫–∞–ø–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"

# === –û–ß–ò–°–¢–ö–ê ===

clean: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏ —É–¥–∞–ª–∏—Ç—å volumes
	docker-compose -f $(COMPOSE_FILE_LOCAL) down -v

clean-all: ## –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ (–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã + –æ–±—Ä–∞–∑—ã + volumes)
	docker-compose -f $(COMPOSE_FILE_LOCAL) down -v --rmi all

# === VPS –ö–û–ú–ê–ù–î–´ ===

vps-up: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –Ω–∞ VPS (–º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è)
	docker-compose -f $(COMPOSE_FILE_VPS) up -d

vps-up-full: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –Ω–∞ VPS —Å Celery
	docker-compose -f $(COMPOSE_FILE_VPS) --profile full up -d

vps-up-backup: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –Ω–∞ VPS —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º–∏ –±—ç–∫–∞–ø–∞–º–∏
	docker-compose -f $(COMPOSE_FILE_VPS) --profile backup up -d

up-backup: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –ª–æ–∫–∞–ª—å–Ω–æ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º–∏ –±—ç–∫–∞–ø–∞–º–∏
	docker-compose -f $(COMPOSE_FILE_LOCAL) --profile backup up -d

vps-down: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∞ VPS
	docker-compose -f $(COMPOSE_FILE_VPS) down

vps-logs: ## –õ–æ–≥–∏ –Ω–∞ VPS
	docker-compose -f $(COMPOSE_FILE_VPS) logs -f

vps-status: ## –°—Ç–∞—Ç—É—Å –Ω–∞ VPS
	docker-compose -f $(COMPOSE_FILE_VPS) ps

vps-build: ## –°–æ–±—Ä–∞—Ç—å –æ–±—Ä–∞–∑—ã –¥–ª—è VPS
	docker-compose -f $(COMPOSE_FILE_VPS) build

# === –ë–´–°–¢–†–´–ï –ö–û–ú–ê–ù–î–´ ===

quick-start: build up ## –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç (—Å–±–æ—Ä–∫–∞ + –∑–∞–ø—É—Å–∫)

quick-restart: down up ## –ë—ã—Å—Ç—Ä—ã–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫

start-minimal: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ –±–æ—Ç + –ë–î + Redis
	docker-compose -f $(COMPOSE_FILE) --env-file .env.client up -d bot postgres redis

# === –û–¢–õ–ê–î–ö–ê ===

debug: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –≤ debug —Ä–µ–∂–∏–º–µ
	docker-compose -f $(COMPOSE_FILE) --env-file .env.client run --rm $(SERVICE_NAME) python main.py

debug-shell: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—É—é –æ–±–æ–ª–æ—á–∫—É Python
	docker-compose -f $(COMPOSE_FILE) --env-file .env.client run --rm $(SERVICE_NAME) python -i

# === –ò–ù–§–û–†–ú–ê–¶–ò–Ø ===

info: ## –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ä–≤–∏—Å–∞—Ö VPS
	@echo "=== –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ VPS –±–æ—Ç–µ ==="
	@echo "Bot webhook: https://chatbotan.ru/magicframe"
@echo "YooKassa webhook: https://chatbotan.ru/yookassa/webhook"
@echo "Health check: https://chatbotan.ru/magicframe/health"
	@echo ""
	@echo "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î (–≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞):"
	@echo "make shell-db"
	@echo ""
	@echo "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Redis (–≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞):"
	@echo "make shell-redis"
	@echo ""
	@echo "–§–∞–π–ª—ã:"
	@echo "- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: .env.client"
	@echo "- –õ–æ–≥–∏: ./logs/"
	@echo "- –°—Ç–∞—Ç–∏–∫–∞: ./static/"
	@echo "- –†–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏: ./backups/"
	@echo ""
	@echo "=== –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –±—ç–∫–∞–ø—ã ==="
	@echo "- –ï–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ 3:00 —É—Ç—Ä–∞ (UTC)"
	@echo "- –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ –≤ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ –≤ 2:00 —É—Ç—Ä–∞ (—Ç–æ–ª—å–∫–æ VPS)"
	@echo "- –ê–≤—Ç–æ–æ—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—à–µ 30 –¥–Ω–µ–π –≤ 4:00 —É—Ç—Ä–∞"
	@echo "- –†—É—á–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω–∫—É –±–æ—Ç–∞"
	@echo ""
	@echo "–ö–æ–º–∞–Ω–¥—ã –±—ç–∫–∞–ø–æ–≤:"
	@echo "make backup-auto     # –°–æ–∑–¥–∞—Ç—å —Å–µ–π—á–∞—Å"
	@echo "make backup-list     # –°–ø–∏—Å–æ–∫ –±—ç–∫–∞–ø–æ–≤"  
	@echo "make backup-cleanup  # –û—á–∏—Å—Ç–∏—Ç—å —Å—Ç–∞—Ä—ã–µ"
	@echo "make up-backup       # –ó–∞–ø—É—Å–∫ —Å –±—ç–∫–∞–ø–∞–º–∏"

# === –ú–û–ù–ò–¢–û–†–ò–ù–ì ===

stats: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤
	docker stats magic_frame_bot magic_frame_postgres magic_frame_redis --format "table {{.Container}}\t{{.CPUPerc}}\t{{.MemUsage}}\t{{.NetIO}}"

top: ## –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å—ã –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞—Ö
	@echo "=== –ü—Ä–æ—Ü–µ—Å—Å—ã –≤ –±–æ—Ç–µ ==="
	docker-compose -f $(COMPOSE_FILE) --env-file .env.client exec $(SERVICE_NAME) ps aux
	@echo ""
	@echo "=== –ü—Ä–æ—Ü–µ—Å—Å—ã –≤ PostgreSQL ==="
	docker-compose -f $(COMPOSE_FILE) --env-file .env.client exec postgres ps aux 