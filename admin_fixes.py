# Fix for admin_detailed_stats handler - to be added to admin.py

@router.callback_query(F.data == "admin_detailed_stats")
@admin_only
async def show_detailed_admin_stats(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –±–æ—Ç–∞"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        stats = await db.get_bot_statistics()
        detailed_stats = await db.get_detailed_statistics()
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–µ—Ç–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        text = format_detailed_stats_message(stats, detailed_stats)
        
        builder = InlineKeyboardBuilder()
        builder.button(text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data="admin_detailed_stats")
        builder.button(text="üìä –ö—Ä–∞—Ç–∫–∞—è", callback_data="admin_stats")
        builder.button(text="üì• –≠–∫—Å–ø–æ—Ä—Ç", callback_data="admin_export_stats")
        builder.button(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="admin_menu")
        builder.adjust(2, 1, 1)
        
        await callback.message.edit_text(text, reply_markup=builder.as_markup())
        await BaseHandler.answer_callback(callback)
        
    except Exception as e:
        logger.error(f"Error loading detailed admin stats: {e}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–µ—Ç–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏", show_alert=True)

def format_detailed_stats_message(stats: dict, detailed_stats: dict) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–µ—Ç–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π"""
    try:
        text = f"""
üìä <b>–î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞</b>

üë• <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:</b>
‚îú –í—Å–µ–≥–æ: {stats['users']['total']}
‚îú –ê–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ–≥–æ–¥–Ω—è: {stats['users']['active_today']}
‚îú –ù–æ–≤—ã—Ö —Å–µ–≥–æ–¥–Ω—è: {stats['users']['new_today']}
‚îú –ù–æ–≤—ã—Ö –∑–∞ –Ω–µ–¥–µ–ª—é: {detailed_stats.get('users', {}).get('new_week', 0)}
‚îú –ù–æ–≤—ã—Ö –∑–∞ –º–µ—Å—è—Ü: {detailed_stats.get('users', {}).get('new_month', 0)}
‚îî –°—Ä–µ–¥–Ω–∏–π –±–∞–ª–∞–Ω—Å: {detailed_stats.get('users', {}).get('avg_balance', 0):.1f} –∫—Ä–µ–¥–∏—Ç–æ–≤

üé¨ <b>–ì–µ–Ω–µ—Ä–∞—Ü–∏–∏:</b>
‚îú –í—Å–µ–≥–æ: {stats['generations']['total']}
‚îú –°–µ–≥–æ–¥–Ω—è: {stats['generations']['today']}
‚îú –í –æ–±—Ä–∞–±–æ—Ç–∫–µ: {stats['generations']['pending']}
‚îú –£—Å–ø–µ—à–Ω—ã—Ö: {detailed_stats.get('generations', {}).get('completed', 0)}
‚îú –û—Ç–º–µ–Ω–µ–Ω–Ω—ã—Ö: {detailed_stats.get('generations', {}).get('cancelled', 0)}
‚îî –°—Ä–µ–¥–Ω—è—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {detailed_stats.get('generations', {}).get('avg_duration', 0):.1f} –º–∏–Ω

üí∞ <b>–§–∏–Ω–∞–Ω—Å—ã:</b>
‚îú –î–æ—Ö–æ–¥—ã —Å–µ–≥–æ–¥–Ω—è: {stats['finance']['revenue_today']} Stars
‚îú –û–±—â–∏–µ –¥–æ—Ö–æ–¥—ã: {stats['finance']['total_revenue']} Stars
‚îú –ü–æ—Ç—Ä–∞—á–µ–Ω–æ –∫—Ä–µ–¥–∏—Ç–æ–≤ —Å–µ–≥–æ–¥–Ω—è: {detailed_stats.get('finance', {}).get('credits_spent_today', 0)}
‚îú –ö—É–ø–ª–µ–Ω–æ –∫—Ä–µ–¥–∏—Ç–æ–≤ —Å–µ–≥–æ–¥–Ω—è: {detailed_stats.get('finance', {}).get('credits_bought_today', 0)}
‚îî –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: {detailed_stats.get('finance', {}).get('avg_purchase', 0):.2f} Stars

‚ö° <b>–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:</b>
‚îú API –∑–∞–ø—Ä–æ—Å–æ–≤ —Å–µ–≥–æ–¥–Ω—è: {detailed_stats.get('performance', {}).get('api_requests_today', 0)}
‚îú –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: {detailed_stats.get('performance', {}).get('avg_response_time', 0):.2f} —Å–µ–∫
‚îú –û—à–∏–±–æ–∫ API: {detailed_stats.get('performance', {}).get('api_errors_today', 0)}
‚îî –ù–∞–≥—Ä—É–∑–∫–∞ —Å–∏—Å—Ç–µ–º—ã: {detailed_stats.get('performance', {}).get('system_load', 0):.1f}%

üìÖ <b>–û–±–Ω–æ–≤–ª–µ–Ω–æ:</b> {datetime.now().strftime('%d.%m.%Y %H:%M:%S')}
"""
        return text
    except Exception as e:
        logger.error(f"Error formatting detailed stats: {e}")
        return "‚ùå –û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"

@router.callback_query(F.data == "admin_export_stats")
@admin_only
async def export_admin_stats(callback: CallbackQuery):
    """–≠–∫—Å–ø–æ—Ä—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤ —Ñ–∞–π–ª"""
    try:
        await callback.answer("üìä –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞—é —ç–∫—Å–ø–æ—Ä—Ç...")
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞
        stats = await db.get_bot_statistics()
        detailed_stats = await db.get_detailed_statistics()
        
        # –°–æ–∑–¥–∞–µ–º CSV —Å –¥–∞–Ω–Ω—ã–º–∏
        import io
        import csv
        
        output = io.StringIO()
        writer = csv.writer(output)
        
        # –ó–∞–≥–æ–ª–æ–≤–∫–∏
        writer.writerow(['–ú–µ—Ç—Ä–∏–∫–∞', '–ó–Ω–∞—á–µ–Ω–∏–µ', '–û–ø–∏—Å–∞–Ω–∏–µ'])
        
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
        writer.writerow(['–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', stats['users']['total'], '–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π'])
        writer.writerow(['–ê–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ–≥–æ–¥–Ω—è', stats['users']['active_today'], '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ–≥–æ–¥–Ω—è'])
        writer.writerow(['–ù–æ–≤—ã—Ö —Å–µ–≥–æ–¥–Ω—è', stats['users']['new_today'], '–ù–æ–≤—ã—Ö —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π —Å–µ–≥–æ–¥–Ω—è'])
        
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏–∏
        writer.writerow(['–í—Å–µ–≥–æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–π', stats['generations']['total'], '–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–π'])
        writer.writerow(['–ì–µ–Ω–µ—Ä–∞—Ü–∏–π —Å–µ–≥–æ–¥–Ω—è', stats['generations']['today'], '–ì–µ–Ω–µ—Ä–∞—Ü–∏–π —Å–µ–≥–æ–¥–Ω—è'])
        writer.writerow(['–í –æ–±—Ä–∞–±–æ—Ç–∫–µ', stats['generations']['pending'], '–ì–µ–Ω–µ—Ä–∞—Ü–∏–π –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ'])
        
        # –§–∏–Ω–∞–Ω—Å—ã
        writer.writerow(['–î–æ—Ö–æ–¥ —Å–µ–≥–æ–¥–Ω—è (Stars)', stats['finance']['revenue_today'], '–î–æ—Ö–æ–¥ –∑–∞ —Å–µ–≥–æ–¥–Ω—è'])
        writer.writerow(['–û–±—â–∏–π –¥–æ—Ö–æ–¥ (Stars)', stats['finance']['total_revenue'], '–û–±—â–∏–π –¥–æ—Ö–æ–¥'])
        
        # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
        csv_content = output.getvalue().encode('utf-8')
        filename = f"bot_stats_{datetime.now().strftime('%Y%m%d_%H%M%S')}.csv"
        
        from aiogram.types import BufferedInputFile
        file = BufferedInputFile(csv_content, filename=filename)
        
        await callback.message.answer_document(
            file,
            caption=f"üìä –≠–∫—Å–ø–æ—Ä—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –±–æ—Ç–∞\nüìÖ {datetime.now().strftime('%d.%m.%Y %H:%M')}"
        )
        
        await callback.answer("‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞")
        
    except Exception as e:
        logger.error(f"Error exporting admin stats: {e}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏", show_alert=True)
