# –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
with open('bot/handlers/utm_admin.py', 'r', encoding='utf-8') as f:
    content = f.read()

# –ù–∞–π–¥–µ–º —Ñ—É–Ω–∫—Ü–∏—é view_campaign –∏ –∑–∞–º–µ–Ω–∏–º –µ—ë –Ω–∞ –≤–µ—Ä—Å–∏—é —Å –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–π –∫—Ä–µ–¥–∏—Ç–æ–≤
view_start = content.find('@router.callback_query(F.data.startswith("utm_view_campaign_"))')
view_end = content.find('@router.callback_query', view_start + 1)
if view_end == -1:
    view_end = content.find('\n\n# =================== –£–ü–†–ê–í–õ–ï–ù–ò–ï –ö–ê–ú–ü–ê–ù–ò–ï–ô ===================', view_start)

# –ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è view_campaign —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–π
enhanced_view_campaign = '''@router.callback_query(F.data.startswith("utm_view_campaign_"))
@admin_required
async def view_campaign(callback: CallbackQuery, state: FSMContext):
    """–ü—Ä–æ—Å–º–æ—Ç—Ä –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–∞–º–ø–∞–Ω–∏–∏ —Å –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–π –∫—Ä–µ–¥–∏—Ç–æ–≤"""
    await state.clear()
    
    campaign_id = int(callback.data.split("_")[-1])
    
    try:
        analytics = await utm_service.get_campaign_analytics(campaign_id)
        credit_analytics = await utm_service.get_campaign_credit_analytics(campaign_id)
        
        if not analytics:
            await callback.answer("‚ùå –ö–∞–º–ø–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞", show_alert=True)
            return
        
        campaign = analytics.get('campaign', {})
        clicks = analytics.get('clicks', {})
        events = analytics.get('events', {})
        conversions = analytics.get('conversions', {})
        
        status_emoji = "üü¢" if campaign.get('is_active', False) else "üî¥"
        
        text = f"""
üìä <b>–†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –∫–∞–º–ø–∞–Ω–∏–∏</b>

{status_emoji} <b>{campaign.get('name', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}</b>

üè∑Ô∏è <b>UTM –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:</b>
‚Ä¢ –ò—Å—Ç–æ—á–Ω–∏–∫: <code>{campaign.get('utm_source', '–Ω–µ —É–∫–∞–∑–∞–Ω')}</code>
‚Ä¢ –¢–∏–ø: <code>{campaign.get('utm_medium', '–Ω–µ —É–∫–∞–∑–∞–Ω')}</code>
‚Ä¢ –ö–∞–º–ø–∞–Ω–∏—è: <code>{campaign.get('utm_campaign', '–Ω–µ —É–∫–∞–∑–∞–Ω')}</code>
‚Ä¢ –ö–æ–Ω—Ç–µ–Ω—Ç: <code>{campaign.get('utm_content') or '–Ω–µ —É–∫–∞–∑–∞–Ω'}</code>

üìà <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç—Ä–∞—Ñ–∏–∫–∞:</b>
‚Ä¢ üë• –í—Å–µ–≥–æ –∫–ª–∏–∫–æ–≤: <b>{clicks.get('total_clicks', 0)}</b>
‚Ä¢ üÜî –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: <b>{clicks.get('unique_users', 0)}</b>
‚Ä¢ üÜï –ü–µ—Ä–≤—ã–µ –ø–æ—Å–µ—â–µ–Ω–∏—è: <b>{clicks.get('first_visits', 0)}</b>

üéØ <b>–°–æ–±—ã—Ç–∏—è –∏ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏:</b>
"""
        
        for event_type, event_data in events.items():
            event_emoji = {
                'registration': 'üìù',
                'purchase': 'üí∞',
                'generation': 'üé¨',
                'promo_bonus': 'üéÅ'
            }.get(event_type, 'üìä')
            
            event_name = {
                'registration': '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏',
                'purchase': '–ü–æ–∫—É–ø–∫–∏', 
                'generation': '–ì–µ–Ω–µ—Ä–∞—Ü–∏–∏',
                'promo_bonus': '–ë–æ–Ω—É—Å—ã –ø–æ –ø—Ä–æ–º–æ-–∫–æ–¥–∞–º'
            }.get(event_type, event_type.title())
            
            text += f"‚Ä¢ {event_emoji} {event_name}: <b>{event_data.get('count', 0)}</b>"
            if event_data.get('total_revenue', 0) > 0:
                text += f" (üí∞ {event_data['total_revenue']:.2f}‚ÇΩ)"
            text += "\\n"
        
        text += f"""
üìä <b>–ö–æ–Ω–≤–µ—Ä—Å–∏–∏:</b>
‚Ä¢ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: <b>{conversions.get('registration_rate', 0)}%</b>
‚Ä¢ –ü–æ–∫—É–ø–∫–∞: <b>{conversions.get('purchase_rate', 0)}%</b>

üí≥ <b>–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∫—Ä–µ–¥–∏—Ç–æ–≤:</b>
‚Ä¢ –ö—É–ø–ª–µ–Ω–æ –∫—Ä–µ–¥–∏—Ç–æ–≤: <b>{credit_analytics['summary']['total_credits_bought']}</b>
‚Ä¢ –ü–æ—Ç—Ä–∞—á–µ–Ω–æ –∫—Ä–µ–¥–∏—Ç–æ–≤: <b>{credit_analytics['summary']['total_credits_spent']}</b>
‚Ä¢ –í—Å–µ–≥–æ –ø–æ–∫—É–ø–æ–∫: <b>{credit_analytics['summary']['total_purchases']}</b>
‚Ä¢ –°—Ä–µ–¥–Ω—è—è –ø–æ–∫—É–ø–∫–∞: <b>{credit_analytics['summary']['avg_purchase_amount']:.0f} –∫—Ä–µ–¥–∏—Ç–æ–≤</b>
"""
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–∞–º—ã–π –ø–æ–ø—É–ª—è—Ä–Ω—ã–π –ø–∞–∫–µ—Ç
        if credit_analytics['summary']['most_popular_package']:
            text += f"‚Ä¢ –ü–æ–ø—É–ª—è—Ä–Ω—ã–π –ø–∞–∫–µ—Ç: <b>{credit_analytics['summary']['most_popular_package']}</b>\\n"
        
        text += f"""
üí∞ <b>–í—ã—Ä—É—á–∫–∞:</b>
‚Ä¢ Telegram Stars: <b>{credit_analytics['total_revenue']['stars']}</b>
‚Ä¢ –†—É–±–ª–∏ (–Æ–ö–∞—Å—Å–∞): <b>{credit_analytics['total_revenue']['rub']:.2f}‚ÇΩ</b>
"""
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±–æ–Ω—É—Å–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è –µ—Å–ª–∏ –µ—Å—Ç—å
        if credit_analytics['bonus_events']:
            text += f"\\nüéÅ <b>–ë–æ–Ω—É—Å–Ω—ã–µ –∫—Ä–µ–¥–∏—Ç—ã:</b>\\n"
            for bonus in credit_analytics['bonus_events'][:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 3
                text += f"‚Ä¢ {bonus['usage_count']}x –ø–æ {bonus['credits_amount']} –∫—Ä–µ–¥–∏—Ç–æ–≤\\n"
        
        text += f"\\nüìÖ <b>–°–æ–∑–¥–∞–Ω–∞:</b> {datetime.fromisoformat(campaign.get('created_at', '2025-01-01T00:00:00')).strftime('%d.%m.%Y %H:%M') if campaign.get('created_at') else '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}"
        
        builder = InlineKeyboardBuilder()
        
        # –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
        toggle_text = "üî¥ –î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å" if campaign.get('is_active', False) else "üü¢ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å"
        builder.button(text=toggle_text, callback_data=f"utm_toggle_{campaign_id}")
        
        builder.button(text="üìä –î–µ—Ç–∞–ª–∏ –ø–æ –∫—Ä–µ–¥–∏—Ç–∞–º", callback_data=f"utm_credits_{campaign_id}")
        builder.button(text="üì• –≠–∫—Å–ø–æ—Ä—Ç (–¥–µ—Ç–∞–ª—å–Ω—ã–π)", callback_data=f"utm_export_{campaign_id}")
        builder.button(text="üìã –≠–∫—Å–ø–æ—Ä—Ç (—Å–≤–æ–¥–∫–∞)", callback_data=f"utm_export_summary_{campaign_id}")
        builder.button(text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –∫–∞–º–ø–∞–Ω–∏—é", callback_data=f"utm_delete_{campaign_id}")
        builder.button(text="üìã –°–ø–∏—Å–æ–∫ –∫–∞–º–ø–∞–Ω–∏–π", callback_data="utm_list_campaigns")
        builder.button(text="‚óÄÔ∏è –ú–µ–Ω—é UTM", callback_data="utm_analytics")
        builder.adjust(2, 2, 1, 1, 1)
        
        await callback.message.edit_text(text, reply_markup=builder.as_markup(), parse_mode="HTML")
        await callback.answer()
        
    except Exception as e:
        logger.error(f"Error viewing UTM campaign {campaign_id}: {e}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏", show_alert=True)

'''

# –ó–∞–º–µ–Ω—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é
if view_end != -1:
    content = content[:view_start] + enhanced_view_campaign + content[view_end:]

# –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
with open('bot/handlers/utm_admin.py', 'w', encoding='utf-8') as f:
    f.write(content)

print("–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–∞–º–ø–∞–Ω–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω —Å –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–π –∫—Ä–µ–¥–∏—Ç–æ–≤")
