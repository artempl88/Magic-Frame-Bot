#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤ –∞–¥–º–∏–Ω—Å–∫–∏—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
"""

import sys
import os
import subprocess
import asyncio
from pathlib import Path

def run_tests():
    """–ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Ç–µ—Å—Ç—ã"""
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ PYTHONPATH
    current_dir = Path(__file__).parent
    sys.path.insert(0, str(current_dir))
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ pytest
        result = subprocess.run([sys.executable, "-m", "pytest", "--version"], 
                              capture_output=True, text=True)
        if result.returncode != 0:
            print("‚ùå pytest –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install pytest pytest-asyncio")
            return False
        
        print("üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –∞–¥–º–∏–Ω—Å–∫–∏—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤...")
        
        # –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
        test_cmd = [
            sys.executable, "-m", "pytest", 
            "tests/test_admin_handlers.py",
            "-v", 
            "--tb=short",
            "--asyncio-mode=auto"
        ]
        
        result = subprocess.run(test_cmd, cwd=current_dir)
        
        if result.returncode == 0:
            print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
            return True
        else:
            print("‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Ç–µ—Å—Ç–æ–≤: {e}")
        return False

def run_quick_integration_test():
    """–ë—ã—Å—Ç—Ä—ã–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–µ—Å—Ç"""
    
    print("üîç –ó–∞–ø—É—Å–∫ –±—ã—Å—Ç—Ä–æ–≥–æ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç—ã
        from bot.handlers.admin import (
            show_admin_stats, admin_broadcast, give_credits,
            show_detailed_admin_stats, export_admin_stats
        )
        
        print("‚úÖ –ò–º–ø–æ—Ä—Ç—ã –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —É—Å–ø–µ—à–Ω—ã")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
        handlers = [
            show_admin_stats,
            admin_broadcast, 
            give_credits,
            show_detailed_admin_stats,
            export_admin_stats
        ]
        
        for handler in handlers:
            if not callable(handler):
                print(f"‚ùå {handler.__name__} –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏–µ–π")
                return False
            print(f"‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ {handler.__name__} –¥–æ—Å—Ç—É–ø–µ–Ω")
        
        print("‚úÖ –ë—ã—Å—Ç—Ä—ã–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω!")
        return True
        
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–¥–º–∏–Ω—Å–∫–∏—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤")
    print("=" * 50)
    
    # –°–Ω–∞—á–∞–ª–∞ –±—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç
    if not run_quick_integration_test():
        print("‚ùå –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω, –ø—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ")
        sys.exit(1)
    
    print("\n" + "=" * 50)
    
    # –ó–∞—Ç–µ–º –ø–æ–ª–Ω—ã–µ —Ç–µ—Å—Ç—ã, –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ã
    if os.path.exists("tests/test_admin_handlers.py"):
        success = run_tests()
        sys.exit(0 if success else 1)
    else:
        print("‚ÑπÔ∏è –ü–æ–ª–Ω—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã, —Ç–æ–ª—å–∫–æ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–µ—Å—Ç")
        sys.exit(0)
